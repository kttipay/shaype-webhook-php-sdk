{
    "openapi": "3.0.1",
    "info": {
        "title": "Notification Webhooks",
        "description": "Definition of the webhooks API for client callbacks",
        "version": "1.0.0"
    },
    "x-explorer-enabled": false,
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Generated server url"
        }
    ],
    "tags": [
        {
            "name": "Notifications API",
            "description": "Notifications (webhooks) API that should be implemented by client"
        }
    ],
    "paths": {
        "/api/hay/v0/communications/sms": {
            "post": {
                "tags": [
                    "Notifications API"
                ],
                "summary": "Notification - SMS",
                "description": "This endpoint will receive events we recommend being delivered via SMS - that includes OTP texts needed for clients using our authentication service.",
                "operationId": "notifySms",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SmsDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Unauthorised"
                    },
                    "422": {
                        "description": "Invalid Input"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/hay/v0/communications/notification": {
            "post": {
                "tags": [
                    "Notifications API"
                ],
                "summary": "Notification - event",
                "description": "This endpoint will receive the main notification stream for the platform events.",
                "operationId": "notifyNotification",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NotificationDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Unauthorised"
                    },
                    "422": {
                        "description": "Invalid Input"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/hay/v0/communications/email": {
            "post": {
                "tags": [
                    "Notifications API"
                ],
                "summary": "Notification - email",
                "description": "This endpoint will receive events we recommend being delivered via email - that includes magic-link email needed for clients using our authentication service.",
                "operationId": "notifyEmail",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Unauthorised"
                    },
                    "422": {
                        "description": "Invalid Input"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountStatusChangeEventDto": {
                "type": "object",
                "properties": {
                    "accountHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Account associated with the event",
                        "format": "uuid"
                    },
                    "accountStatus": {
                        "type": "string",
                        "description": "New account status:\n * **ACTIVE**: Account has been activated\n * **PENDING_APPROVAL**: Account is pending approval\n * **APPROVED**: Account has been approved\n * **ACTIVE_IN_ARREARS**: Account is active but has arrears\n * **BLOCKED**: Account has been blocked\n * **CLOSED**: Account has been closed",
                        "enum": [
                            "ACTIVE",
                            "BLOCKED",
                            "PENDING_APPROVAL",
                            "APPROVED",
                            "DORMANT",
                            "CLOSED",
                            "ACTIVE_IN_ARREARS"
                        ]
                    }
                },
                "description": "Details of the **Account Status Change** event; provided when the type is `ACCOUNT_STATUS_CHANGE`."
            },
            "CardStatusChangeEventDto": {
                "type": "object",
                "properties": {
                    "cardHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Card associated with the event",
                        "format": "uuid"
                    },
                    "accountHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Account associated with the event",
                        "format": "uuid"
                    },
                    "cardStatus": {
                        "type": "string",
                        "description": "New card status:\n * **ACTIVE**: Card has been activated\n * **BLOCKED**: Card has been blocked\n * **EXPIRED**: Card has been expired\"\n * **INACTIVE**: Card has been cancelled\n * **AWAITING_ACTIVATION**: Card is awaiting activation",
                        "enum": [
                            "ACTIVE",
                            "BLOCKED",
                            "EXPIRED",
                            "INACTIVE",
                            "AWAITING_ACTIVATION"
                        ]
                    },
                    "cardLastFourDigits": {
                        "type": "string",
                        "description": "Last four card digits"
                    }
                },
                "description": "Details of the **Card Status Change** event; provided when the type is `CARD_STATUS_CHANGE`."
            },
            "CustomerOtpEventDto": {
                "type": "object",
                "properties": {
                    "otp": {
                        "type": "string",
                        "description": "One-Time Password to be delivered to the customer"
                    }
                },
                "description": "Details of the **One-Time Password Request** event; provided when the type is `OTP`."
            },
            "PasscodeChangeEventDto": {
                "type": "object",
                "properties": {
                    "otp": {
                        "type": "string",
                        "description": "One-Time Password to be delivered to the customer"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the passcode change:\n * **SET_PASSCODE**: A new passcode has been set\n * **FORGOT_PASSCODE**: Forgotten passcode process has been invoked",
                        "enum": [
                            "SET_PASSCODE",
                            "FORGOT_PASSCODE"
                        ]
                    }
                },
                "description": "Details of the **Passcode Change** event; provided when the type is `PASSCODE_CHANGE`."
            },
            "PhoneNumber": {
                "type": "object",
                "properties": {
                    "countryCodePrefix": {
                        "type": "string"
                    },
                    "numberAfterPrefix": {
                        "type": "string"
                    }
                },
                "description": "Phone number to send the SMS notification to."
            },
            "PhoneNumberVerificationEventDto": {
                "type": "object",
                "properties": {
                    "otp": {
                        "type": "string",
                        "description": "One-Time Password to be delivered to the customer"
                    }
                },
                "description": "Details of the **Phone Number Verification** event; provided when the type is `PHONE_NUMBER_VERIFICATION`."
            },
            "SmsDto": {
                "required": [
                    "idempotencyKey",
                    "phoneNumber",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "$ref": "#/components/schemas/PhoneNumber"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the notification event - one of:\n * **ACCOUNT_STATUS_CHANGE**: The status of an account has changed\n * **CARD_ADDED_TO_WALLET**: Card has been added to a device wallet\n * **OTP**: One-time password has been requested\n * **PASSCODE_CHANGE**: Customer's passcode has been changed\n * **PHONE_NUMBER_VERIFICATION**: Phone number verification has been requested\n",
                        "enum": [
                            "ACCOUNT_STATUS_CHANGE",
                            "CARD_ADDED_TO_WALLET",
                            "OTP",
                            "PASSCODE_CHANGE",
                            "PHONE_NUMBER_VERIFICATION"
                        ]
                    },
                    "idempotencyKey": {
                        "type": "string",
                        "description": "Idempotency key (UUID) to uniquely represent this request and prevent duplication.",
                        "format": "uuid"
                    },
                    "customerHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Customer associated with the event",
                        "format": "uuid"
                    },
                    "cardStatusChangeEvent": {
                        "$ref": "#/components/schemas/CardStatusChangeEventDto"
                    },
                    "accountStatusChangeEvent": {
                        "$ref": "#/components/schemas/AccountStatusChangeEventDto"
                    },
                    "passcodeChangeEvent": {
                        "$ref": "#/components/schemas/PasscodeChangeEventDto"
                    },
                    "phoneNumberVerificationEvent": {
                        "$ref": "#/components/schemas/PhoneNumberVerificationEventDto"
                    },
                    "customerOtpEvent": {
                        "$ref": "#/components/schemas/CustomerOtpEventDto"
                    }
                },
                "description": "Details of the SMS notification"
            },
            "AccountBalancesDto": {
                "type": "object",
                "properties": {
                    "totalBalance": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "heldBalance": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "lockedBalance": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "stacksBalance": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "availableBalance": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    }
                },
                "description": "Breakdown of the account balances"
            },
            "ApplePayRewardForCustomerEventDto": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Account Id",
                        "format": "uuid"
                    },
                    "cardId": {
                        "type": "string",
                        "description": "Card Id",
                        "format": "uuid"
                    }
                },
                "description": "Details of the **Apple Pay Reward For Customer** event; provided when the type is `APPLE_PAY_REWARD_FOR_CUSTOMER`."
            },
            "BasicAccountNumber": {
                "type": "object",
                "properties": {
                    "accountNumber": {
                        "type": "string"
                    },
                    "branchNumber": {
                        "type": "string"
                    }
                },
                "description": "Details of the counterpart account number"
            },
            "BpayDetails": {
                "type": "object",
                "properties": {
                    "billerCode": {
                        "type": "string",
                        "description": "Biller code."
                    },
                    "billerReference": {
                        "type": "string",
                        "description": "Customer reference number (CRN)."
                    },
                    "billerName": {
                        "type": "string",
                        "description": "Biller name."
                    },
                    "billerImage": {
                        "type": "string",
                        "description": "Biller image."
                    }
                },
                "description": "BPAY transaction counterpart details."
            },
            "CardAdditionToWalletEventDto": {
                "type": "object",
                "properties": {
                    "cardHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Card associated with the event",
                        "format": "uuid"
                    },
                    "cardLastFourDigits": {
                        "type": "string",
                        "description": "Last four card digits"
                    },
                    "walletType": {
                        "type": "string",
                        "description": "The type of the device wallet:\n * DEFAULT_WALLET\n * APPLE_WALLET\n * ANDROID_WALLET\n * SAMSUNG_WALLET",
                        "enum": [
                            "DEFAULT_WALLET",
                            "APPLE_WALLET",
                            "ANDROID_WALLET",
                            "SAMSUNG_WALLET"
                        ]
                    }
                },
                "description": "Details of the **Card Status Change** event; provided when the type is `CARD_ADDED_TO_WALLET`."
            },
            "CardExpiryReminderEventDto": {
                "type": "object",
                "properties": {
                    "cardId": {
                        "type": "string",
                        "description": "Card Id",
                        "format": "uuid"
                    },
                    "expirationMonth": {
                        "type": "integer",
                        "description": "Card expiration month",
                        "format": "int32"
                    },
                    "expirationYear": {
                        "type": "integer",
                        "description": "Card expiration year",
                        "format": "int32"
                    }
                },
                "description": "Details of the **Card About To Expire Event** event; provided when the type is `REMINDER`+ with one of the following reminder type values:\n * **CARD_EXPIRY_MONTH_REMINDER**\n * **CARD_EXPIRY_2_WEEK_REMINDER**\n * **CARD_EXPIRY_DAY_REMINDER**"
            },
            "CardUsageDetails": {
                "type": "object",
                "properties": {
                    "isMagneticStripePayment": {
                        "type": "boolean",
                        "description": "Specifies whether the magnetic stripe was used"
                    },
                    "isContactless": {
                        "type": "boolean",
                        "description": "Specifies whether the payment was contactless"
                    },
                    "isCardPresent": {
                        "type": "boolean",
                        "description": "Specifies whether it was a card present transaction"
                    },
                    "isMobileWalletPayment": {
                        "type": "boolean",
                        "description": "Specifies whether it was a device wallet payment"
                    },
                    "isAtmWithdrawal": {
                        "type": "boolean",
                        "description": "Specifies whether it was an ATM withdrawal"
                    }
                },
                "description": "Details on the circumstances of card transaction"
            },
            "CounterpartDetails": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Transaction counterpart name."
                    },
                    "bpayDetails": {
                        "$ref": "#/components/schemas/BpayDetails"
                    },
                    "basicAccountNumber": {
                        "$ref": "#/components/schemas/BasicAccountNumber"
                    }
                },
                "description": "Transaction counterpart details."
            },
            "CurrencyAmount": {
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "enum": [
                            "AED",
                            "AFN",
                            "ALL",
                            "AMD",
                            "ANG",
                            "AOA",
                            "ARS",
                            "AUD",
                            "AWG",
                            "AZN",
                            "BAM",
                            "BBD",
                            "BDT",
                            "BGN",
                            "BHD",
                            "BIF",
                            "BMD",
                            "BND",
                            "BOB",
                            "BOV",
                            "BRL",
                            "BSD",
                            "BTN",
                            "BWP",
                            "BYN",
                            "BZD",
                            "CAD",
                            "CDF",
                            "CHF",
                            "CLP",
                            "CNH",
                            "CNY",
                            "COP",
                            "CRC",
                            "CUC",
                            "CUP",
                            "CVE",
                            "CZK",
                            "DJF",
                            "DKK",
                            "DOP",
                            "DZD",
                            "EGP",
                            "ERN",
                            "ETB",
                            "EUR",
                            "FJD",
                            "FKP",
                            "GBP",
                            "GEL",
                            "GHS",
                            "GIP",
                            "GMD",
                            "GNF",
                            "GTQ",
                            "GYD",
                            "HKD",
                            "HNL",
                            "HRK",
                            "HTG",
                            "HUF",
                            "IDR",
                            "ILS",
                            "INR",
                            "IQD",
                            "IRR",
                            "ISK",
                            "JMD",
                            "JOD",
                            "JPY",
                            "KES",
                            "KGS",
                            "KHR",
                            "KMF",
                            "KPW",
                            "KRW",
                            "KWD",
                            "KYD",
                            "KZT",
                            "LAK",
                            "LBP",
                            "LKR",
                            "LRD",
                            "LSL",
                            "LYD",
                            "MAD",
                            "MDL",
                            "MGA",
                            "MKD",
                            "MMK",
                            "MNT",
                            "MOP",
                            "MRU",
                            "MUR",
                            "MVR",
                            "MWK",
                            "MXN",
                            "MYR",
                            "MZN",
                            "NAD",
                            "NGN",
                            "NIO",
                            "NOK",
                            "NPR",
                            "NZD",
                            "OMR",
                            "PAB",
                            "PEN",
                            "PGK",
                            "PHP",
                            "PKR",
                            "PLN",
                            "PYG",
                            "QAR",
                            "RON",
                            "RSD",
                            "RUB",
                            "RWF",
                            "SAR",
                            "SBD",
                            "SCR",
                            "SDG",
                            "SEK",
                            "SGD",
                            "SHP",
                            "SLL",
                            "SOS",
                            "SRD",
                            "SSP",
                            "STN",
                            "SVC",
                            "SYP",
                            "SZL",
                            "THB",
                            "TJS",
                            "TMT",
                            "TND",
                            "TOP",
                            "TRY",
                            "TTD",
                            "TWD",
                            "TZS",
                            "UAH",
                            "UGX",
                            "USD",
                            "UYU",
                            "UZS",
                            "VES",
                            "VND",
                            "VUV",
                            "WST",
                            "XAF",
                            "XCD",
                            "XOF",
                            "XPF",
                            "YER",
                            "ZAR",
                            "ZMW",
                            "ZWL"
                        ]
                    },
                    "amount": {
                        "type": "number"
                    }
                },
                "description": "Total balance minus funds held and funds locked, minus funds allocated to stacks (effectively what the customer can spend right now)."
            },
            "CustomerDetailsChangeEventDto": {
                "type": "object",
                "properties": {
                    "phoneNumberChanged": {
                        "type": "boolean",
                        "description": "Updated phone number"
                    },
                    "customerNameChanged": {
                        "type": "boolean",
                        "description": "Updated customer name"
                    },
                    "emailAddressChanged": {
                        "type": "boolean",
                        "description": "Updated email"
                    },
                    "addressChanged": {
                        "type": "boolean",
                        "description": "Updated address"
                    }
                },
                "description": "Details of the **Customer Details Change** event; provided when the type is `CUSTOMER_DETAILS_CHANGE`."
            },
            "CustomerStatusUpdatedEventDto": {
                "type": "object",
                "properties": {
                    "customerStatus": {
                        "type": "string",
                        "description": "New customer status:\n * **ACTIVE**: Customer is active\n * **INACTIVE**: Customer is not active (closed)\n * **REJECTED**: Customer has been rejected\n * **BLOCKED**: Customer is blocked\n * **PENDING_APPROVAL**: Customer is awaiting approval\n * **REFERRED**: Customer is referred for further KYC checks",
                        "enum": [
                            "ACTIVE",
                            "INACTIVE",
                            "REJECTED",
                            "BLOCKED",
                            "PENDING_APPROVAL",
                            "REFERRED"
                        ]
                    }
                },
                "description": "Details of the **Customer Status Updated** event; provided when the type is `CUSTOMER_STATUS_UPDATED`."
            },
            "DirectEntryEventDto": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Direct Entry Transaction associated with the event",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string",
                        "description": "Transaction type; Currently only the `DEBIT` type is supported.",
                        "enum": [
                            "DEBIT"
                        ]
                    },
                    "direction": {
                        "type": "string",
                        "description": "Transaction direction; Currently only the `OUTBOUND` direction is supported.",
                        "enum": [
                            "OUTBOUND"
                        ]
                    },
                    "status": {
                        "type": "string",
                        "description": "Transaction status.",
                        "enum": [
                            "RECEIVED",
                            "ACCEPTED",
                            "REJECTED",
                            "SUBMITTED",
                            "RETURNED",
                            "COMPLETE",
                            "INCOMPLETE"
                        ]
                    }
                },
                "description": "Details of the **Direct Entry** event; provided when the type is `DIRECT_ENTRY`."
            },
            "MandateActionExpirationEventDto": {
                "type": "object",
                "properties": {
                    "mandateId": {
                        "type": "string",
                        "description": "Mandate identification",
                        "format": "uuid"
                    },
                    "actionId": {
                        "type": "string",
                        "description": "Action identifier",
                        "format": "uuid"
                    },
                    "resolutionRequestedByDateTimeUtc": {
                        "type": "string",
                        "description": "Resolution requested by date and time",
                        "format": "date-time"
                    }
                },
                "description": "Details of the **Mandate Action Expiration** event; provided when the type is `MANDATE_ACTION_EXPIRATION`."
            },
            "MandateDuePaymentEventDto": {
                "type": "object",
                "properties": {
                    "mandateId": {
                        "type": "string",
                        "description": "Mandate identification",
                        "format": "uuid"
                    },
                    "notificationId": {
                        "type": "string",
                        "description": "Notification identifier",
                        "format": "uuid"
                    },
                    "paymentDateTimeUtc": {
                        "type": "string",
                        "description": "Payment date and time",
                        "format": "date-time"
                    }
                },
                "description": "Details of the **Mandate Due Payment** event; provided when the type is `MANDATE_DUE_PAYMENT`."
            },
            "MandateEventDto": {
                "type": "object",
                "properties": {
                    "mandateId": {
                        "type": "string",
                        "description": "Mandate identifier",
                        "format": "uuid"
                    },
                    "actionId": {
                        "type": "string",
                        "description": "Action identifier",
                        "format": "uuid"
                    },
                    "description": {
                        "type": "string",
                        "description": "Event description"
                    },
                    "trigger": {
                        "type": "string",
                        "description": "Event trigger\n* **CCRR**: Cuscal mandate create recalled\n* **CSCH**: Cuscal mandate status changed\n* **IAMN**: Initiator mandate amended\n* **IAMP**: Initiator mandate amend proposed\n* **IAMR**: Initiator mandate amend recalled\n* **ICRR**: Initiator mandate create recalled\n* **ISCH**: Initiator mandate status changed\n* **MAMC**: Mandate amend confirmed\n* **MAMD**: Mandate amend declined\n* **MAMN**: Mandate amended\n* **MAMP**: Mandate amend proposed\n* **MAMR**: Mandate amend recalled\n* **MAMX**: Mandate amend expired\n* **MCRC**: Mandate create confirmed\n* **MCRD**: Mandate create declined\n* **MCRP**: Mandate create proposed\n* **MCRR**: Mandate create recalled\n* **MCRT**: Mandate created\n* **MCRX**: Mandate create expired\n* **MPOF**: Mandate port finalised\n* **MPOT**: Mandate ported\n* **MPOX**: Mandate port expired\n* **MSCH**: Mandate status changed\n* **PAMC**: Payer mandate amend confirmed\n* **PAMD**: Payer mandate amend declined\n* **PAMN**: Payer mandate amended\n* **PCRC**: Payer mandate create confirmed\n* **PCRD**: Payer mandate create declined\n* **PPOI**: Payer mandate port initiated\n* **PPOR**: Payer mandate port recalled\n* **PPOT**: Payer mandate ported\n* **PSCH**: Payer mandate status changed",
                        "enum": [
                            "MAMN",
                            "MAMP",
                            "MAMR",
                            "MAMX",
                            "MCRP",
                            "MCRR",
                            "MCRT",
                            "MCRX",
                            "MPOF",
                            "MPOT",
                            "MPOX",
                            "MSCH",
                            "CSCH",
                            "PAMC",
                            "PAMD",
                            "PAMN",
                            "PCRC",
                            "PCRD",
                            "PPOT",
                            "PSCH",
                            "PPOI",
                            "PPOR",
                            "MCRC",
                            "MCRD",
                            "MAMC",
                            "MAMD",
                            "CCRR",
                            "IAMN",
                            "ISCH",
                            "IAMP",
                            "IAMR",
                            "ICRR"
                        ]
                    }
                },
                "description": "Details of the **Mandate** event; provided when the type is `MANDATE`."
            },
            "MandatePaymentDetails": {
                "type": "object",
                "properties": {
                    "mandateId": {
                        "type": "string",
                        "description": "Mandate ID associated to the transaction.",
                        "format": "uuid"
                    },
                    "instructionId": {
                        "type": "string",
                        "description": "Unique mandate payment instruction identification assigned by the instructing party."
                    },
                    "initiatingPartyName": {
                        "type": "string",
                        "description": "Initiating Party Name."
                    }
                },
                "description": "Mandate payment details."
            },
            "MandatePaymentEventDto": {
                "type": "object",
                "properties": {
                    "instructionId": {
                        "type": "string",
                        "description": "Instruction identification"
                    },
                    "mandateId": {
                        "type": "string",
                        "description": "Mandate identifier",
                        "format": "uuid"
                    },
                    "paymentStatus": {
                        "type": "string",
                        "description": "Payment Status\n* **RECEIVED**: Message has been received, no further update on status yet. Please continue to check for updates.\n* **UNDELIVERED**: Message could not be delivered to the PayTo rails (PAG). Client should retry initiation.\n* **SENT**: Message has been sent, no acknowledgement yet received. Please continue to check for updates.\n* **STORE_AND_FORWARD**: Target institution is not available, but message will be relayed when they are back online. Please continue to check for updates.\n* **ACCEPTED_FOR_CLEARANCE**: Payment is accepted but settlement not initiated. Please continue to check for updates.\n* **SETTLEMENT_ABORTED**: Settlement could not be completed. A retry attempt will be made on behalf of the client. Please continue to check for updates.\n* **ACCEPTED_AND_SETTLED**: Settlement completed.\n* **REJECTED**: Payment could not be completed. Request could be modified and resubmitted - or if unexpected problem then please contact Shaype team for support.\n* **PENDING**: Settlement queued for handling but not complete. Please continue to check for updates",
                        "enum": [
                            "MANDATE_PAYMENT_ACCEPTED",
                            "MANDATE_PAYMENT_ACCEPTED_FOR_CLEARANCE",
                            "MANDATE_PAYMENT_PENDING",
                            "MANDATE_PAYMENT_RECEIVED",
                            "MANDATE_PAYMENT_REJECTED",
                            "MANDATE_PAYMENT_SENT",
                            "MANDATE_PAYMENT_SETTLEMENT_ABORTED",
                            "MANDATE_PAYMENT_STORE_AND_FORWARD",
                            "MANDATE_PAYMENT_UNDELIVERED"
                        ]
                    },
                    "reasonCode": {
                        "type": "string",
                        "description": "Payment rejection reason code"
                    },
                    "transactionHayId": {
                        "type": "string",
                        "description": "Transaction identifier. When payment status is rejected, transaction identifier is null",
                        "format": "uuid"
                    },
                    "isFinal": {
                        "type": "boolean",
                        "description": "Whether the payment status is final"
                    }
                },
                "description": "Details of the **Mandate Payment** event; provided when the type is `MANDATE_PAYMENT`."
            },
            "NotificationDto": {
                "required": [
                    "customerHayId",
                    "idempotencyKey",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "customerHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the customer associated with the notification",
                        "format": "uuid"
                    },
                    "idempotencyKey": {
                        "type": "string",
                        "description": "Idempotency key (UUID) to uniquely represent this request and prevent duplication.",
                        "format": "uuid"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the notification event - one of:\n * **ACCOUNT_STATUS_CHANGE**: The status of an account has changed\n * **APPLE_PAY_REWARD_FOR_CUSTOMER**: Apple Pay reward reminder\n * **CARD_ADDED_TO_WALLET**: Card has been added to a device wallet\n * **CARD_STATUS_CHANGE**: The status of a card has changed\n * **CUSTOMER_DETAILS_CHANGE**: Customer's personal details have been updated\n * **CUSTOMER_STATUS_UPDATED**: Customer's status has been updated\n * **ONBOARDING_PASSED**: Customer onboarding completed successfully\n * **ONBOARDING_FAILED**: Customer onboarding failed\n * **REMINDER**: A reminder\n * **SCHEDULED_PAYMENT**: Scheduled payment creation notification\n * **TRANSACTION**: Transaction notification\n * **DIRECT_ENTRY**: Direct Entry notification\n * **MANDATE**: Mandate notification\n * **MANDATE_DUE_PAYMENT**: Mandate due payment notification\n * **MANDATE_PAYMENT**: Mandate payment notification\n * **MANDATE_ACTION_EXPIRATION**: Mandate action expiration notification\n",
                        "enum": [
                            "ACCOUNT_STATUS_CHANGE",
                            "CUSTOMER_STATUS_UPDATED",
                            "CARD_ADDED_TO_WALLET",
                            "CARD_STATUS_CHANGE",
                            "CUSTOMER_DETAILS_CHANGE",
                            "ONBOARDING_PASSED",
                            "ONBOARDING_FAILED",
                            "REMINDER",
                            "SCHEDULED_PAYMENT",
                            "TRANSACTION",
                            "DIRECT_ENTRY",
                            "MANDATE",
                            "MANDATE_DUE_PAYMENT",
                            "MANDATE_PAYMENT",
                            "APPLE_PAY_REWARD_FOR_CUSTOMER",
                            "MANDATE_ACTION_EXPIRATION"
                        ]
                    },
                    "firebaseDeviceToken": {
                        "type": "string",
                        "description": "Firebase token of the customer's device"
                    },
                    "actionOwner": {
                        "type": "string",
                        "description": "The party responsible for the triggering of an action resulting in a notification event. Possible values:\n * **CLIENT**: Client executed an action which triggered the event.\n * **PLATFORM**: Shaype executed an action which triggered the event.",
                        "enum": [
                            "CLIENT",
                            "PLATFORM"
                        ]
                    },
                    "cardHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Card associated with the event",
                        "format": "uuid"
                    },
                    "productId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Product of the account associated with the event",
                        "format": "uuid"
                    },
                    "accountStatusChangeEvent": {
                        "$ref": "#/components/schemas/AccountStatusChangeEventDto"
                    },
                    "customerStatusUpdatedEvent": {
                        "$ref": "#/components/schemas/CustomerStatusUpdatedEventDto"
                    },
                    "transactionEvent": {
                        "$ref": "#/components/schemas/TransactionEventDto"
                    },
                    "cardStatusChangeEvent": {
                        "$ref": "#/components/schemas/CardStatusChangeEventDto"
                    },
                    "customerDetailsChangeEvent": {
                        "$ref": "#/components/schemas/CustomerDetailsChangeEventDto"
                    },
                    "cardAdditionToWalletEvent": {
                        "$ref": "#/components/schemas/CardAdditionToWalletEventDto"
                    },
                    "reminderType": {
                        "type": "string",
                        "description": "Type of the **Reminder** event; provided when the type is `REMINDER`. Possible values:\n * **REMINDER_TO_COMPLETE_FUNDING**\n * **REMINDER_TO_PROVISION_DIGITAL_CARD**\n * **REMINDER_TO_TRANSACT**\n * **APPLE_PAY_REMINDER_24_HRS**\n * **APPLE_PAY_REMINDER_7_DAYS**\n * **APPLE_PAY_SPEND_REMINDER_7_DAYS**\n * **APPLE_PAY_SPEND_REMINDER_14_DAYS**\n * **APPLE_PAY_ADD_TO_WALLET_REMINDER_30_DAYS**\n * **APPLE_PAY_ADD_TO_WALLET_REMINDER_60_DAYS**\n * **APPLE_PAY_ADD_TO_WALLET_REMINDER_90_DAYS**\n * **GOOGLE_PAY_24_HRS_PARTIAL_PROVISIONING**\n * **GOOGLE_PAY_7_DAYS_PARTIAL_PROVISIONING**\n * **GOOGLE_PAY_7_DAYS_SPEND_REMINDER**\n * **GOOGLE_PAY_14_DAYS_SPEND_REMINDER**\n * **CARD_EXPIRY_MONTH_REMINDER**\n * **CARD_EXPIRY_2_WEEK_REMINDER**\n * **CARD_EXPIRY_DAY_REMINDER**",
                        "enum": [
                            "REMINDER_TO_COMPLETE_FUNDING",
                            "REMINDER_TO_PROVISION_DIGITAL_CARD",
                            "REMINDER_TO_TRANSACT",
                            "APPLE_PAY_REMINDER_24_HRS",
                            "APPLE_PAY_REMINDER_7_DAYS",
                            "APPLE_PAY_SPEND_REMINDER_7_DAYS",
                            "APPLE_PAY_SPEND_REMINDER_14_DAYS",
                            "APPLE_PAY_ADDITION_REWARD",
                            "APPLE_PAY_SPEND_REWARD",
                            "APPLE_PAY_ADD_TO_WALLET_REMINDER_30_DAYS",
                            "APPLE_PAY_ADD_TO_WALLET_REMINDER_60_DAYS",
                            "APPLE_PAY_ADD_TO_WALLET_REMINDER_90_DAYS",
                            "GOOGLE_PAY_24_HRS_PARTIAL_PROVISIONING",
                            "GOOGLE_PAY_7_DAYS_PARTIAL_PROVISIONING",
                            "GOOGLE_PAY_7_DAYS_SPEND_REMINDER",
                            "GOOGLE_PAY_14_DAYS_SPEND_REMINDER",
                            "CARD_EXPIRY_MONTH_REMINDER",
                            "CARD_EXPIRY_2_WEEK_REMINDER",
                            "CARD_EXPIRY_DAY_REMINDER"
                        ]
                    },
                    "scheduledPaymentEvent": {
                        "$ref": "#/components/schemas/ScheduledPaymentEventDto"
                    },
                    "onboardingFailedEvent": {
                        "$ref": "#/components/schemas/OnboardingFailedEventDto"
                    },
                    "directEntryEvent": {
                        "$ref": "#/components/schemas/DirectEntryEventDto"
                    },
                    "mandateDuePaymentEventDto": {
                        "$ref": "#/components/schemas/MandateDuePaymentEventDto"
                    },
                    "mandateEventDto": {
                        "$ref": "#/components/schemas/MandateEventDto"
                    },
                    "mandatePaymentEventDto": {
                        "$ref": "#/components/schemas/MandatePaymentEventDto"
                    },
                    "applePayRewardForCustomerEvent": {
                        "$ref": "#/components/schemas/ApplePayRewardForCustomerEventDto"
                    },
                    "cardExpiryReminderEvent": {
                        "$ref": "#/components/schemas/CardExpiryReminderEventDto"
                    },
                    "mandateActionExpirationEvent": {
                        "$ref": "#/components/schemas/MandateActionExpirationEventDto"
                    }
                },
                "description": "Details of event the notification"
            },
            "OnboardingFailedEventDto": {
                "type": "object",
                "properties": {
                    "state": {
                        "type": "string",
                        "description": "Stage at which the onboarding checks failed:\n * **DOCUMENT_SCAN**: Document and identity check\n * **SANCTIONS_SCAN**: Sanctions check\n * **KYC_AML_SCAN**: KYC / AML check\n * **DUPLICATE_CHECK**: Duplicate customer check",
                        "enum": [
                            "DOCUMENT_SCAN",
                            "SANCTIONS_SCAN",
                            "KYC_AML_SCAN",
                            "DUPLICATE_CHECK"
                        ]
                    },
                    "submissionFailure": {
                        "type": "boolean"
                    }
                },
                "description": "Details of the **Onboarding Failed** event; provided when the type is `ONBOARDING_FAILED`."
            },
            "ReturnReason": {
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Return reason code:\n * **ACCOUNT_BLOCKED**: Account blocked\n * **ACCOUNT_CLOSED**: Account closed\n * **ACCOUNT_INVALID**: Invalid account details\n * **AMOUNT_INVALID**: Invalid amount\n * **CANCELLED**: Return following a cancellation request\n * **CURRENCY_INVALID**: Invalid currency\n * **CUSTOMER_REQUEST**: Return of funds requested by end customer\n * **DUPLICATE**: Duplicate payment\n * **FRAUD**: Fraud or Regulatory\n * **OTHER**: Other reason",
                        "enum": [
                            "ACCOUNT_BLOCKED",
                            "ACCOUNT_CLOSED",
                            "ACCOUNT_INVALID",
                            "AMOUNT_INVALID",
                            "CANCELLED",
                            "CURRENCY_INVALID",
                            "CUSTOMER_REQUEST",
                            "DUPLICATE",
                            "FRAUD",
                            "OTHER"
                        ]
                    },
                    "message": {
                        "type": "string",
                        "description": "Detailed return reason message"
                    }
                },
                "description": "Reason for a transaction reversal. Populated only in case of transaction type **INTERBANK_TRANSFER_OUT_REVERSAL**"
            },
            "RuleDetails": {
                "type": "object",
                "properties": {
                    "ruleId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the transaction blocking rule",
                        "format": "uuid"
                    }
                },
                "description": "Details about the transaction blocking rule"
            },
            "ScheduledPaymentEventDto": {
                "type": "object",
                "properties": {
                    "hayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Scheduled Payment that has been created",
                        "format": "uuid"
                    }
                },
                "description": "Details of the **Scheduled Payment Created** event; provided when the type is `SCHEDULED_PAYMENT`."
            },
            "TransactionEventDto": {
                "type": "object",
                "properties": {
                    "transactionHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Transaction associated with the event",
                        "format": "uuid"
                    },
                    "holdHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Hold associated with the event (only applicable to card transactions). This is also referred to as `relatedHoldHayId` when `isPending` flag is `false`.",
                        "format": "uuid"
                    },
                    "accountHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Account associated with the event",
                        "format": "uuid"
                    },
                    "currencyAmount": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "updatedBalance": {
                        "$ref": "#/components/schemas/CurrencyAmount"
                    },
                    "isPending": {
                        "type": "boolean",
                        "description": "Specifies whether the transaction is still pending"
                    },
                    "counterpartName": {
                        "type": "string",
                        "description": "Transaction counterpart name"
                    },
                    "outcome": {
                        "type": "string",
                        "description": "Authorisation outcome type - for possible values, please see relevant guidance on Transactions",
                        "enum": [
                            "ACCEPTED",
                            "REFUSED_CARD_PREFERENCE",
                            "REFUSED_ACCOUNT_PREFERENCE",
                            "REFUSED_FRAUD",
                            "REFUSED_AML",
                            "REFUSED_MAX_BALANCE_EXCEEDED",
                            "REFUSED_NOT_ENOUGH_FUNDS",
                            "REFUSED_DAILY_LIMIT_EXCEEDED",
                            "INTERNAL_ERROR",
                            "REFUSED_ACCOUNT_NOT_FOUND_FOR_CARD_TOKEN",
                            "REFUSED_UNDETERMINED_BALANCE_FOR_ACCOUNT",
                            "REFUSED_ACCOUNT_NOT_FOUND_FOR_CURRENCY",
                            "REFUSED_UNDETERMINED_SPENDING_FOR_ACCOUNT",
                            "REFUSED_UNDETERMINED_TOP_UPS_FOR_ACCOUNT",
                            "REFUSED_UNDETERMINED_ATM_WITHDRAWALS_FOR_ACCOUNT",
                            "REFUSED_ANNUAL_SPENDING_LIMIT_BREACHED",
                            "REFUSED_DAILY_ATM_WITHDRAWAL_LIMIT_BREACHED",
                            "REFUSED_DAILY_TOP_UP_LIMIT_BREACHED",
                            "REFUSED_ACCOUNT_BLOCKED",
                            "REFUSED_ACCOUNT_CLOSED",
                            "REFUSED_RECIPIENT_ACCOUNT_BLOCKED",
                            "REFUSED_RECIPIENT_ACCOUNT_CLOSED",
                            "REFUSED_DAILY_DIRECT_DEBIT_LIMIT_BREACHED",
                            "REFUSED_DAILY_TRANSFERS_OUT_LIMIT_BREACHED",
                            "REFUSED_RULES",
                            "REFUSED_TOTAL_INBOUND_DIRECT_DEBIT_DAILY_LIMIT_BREACHED",
                            "REFUSED_TOTAL_OUTBOUND_BPAY_DAILY_LIMIT_BREACHED",
                            "REFUSED_TOTAL_NET_VISA_DAILY_LIMIT_BREACHED",
                            "REFUSED_TOTAL_NON_SCHEME_DAILY_LIMIT_BREACHED",
                            "REFUSED_BPAY_INVALID_BILLER_CODE",
                            "REFUSED_BPAY_INVALID_REFERENCE",
                            "REFUSED_BPAY_INVALID_PAYMENT",
                            "REFUSED_BPAY_REJECTED",
                            "REFUSED_DAILY_CARD_TRANSACTIONS_LIMIT_BREACHED",
                            "REFUSED_SINGLE_CARD_TRANSACTION_LIMIT_BREACHED",
                            "REFUSED_SANCTIONS",
                            "REFUSED_UNABLE_TO_VALIDATE",
                            "REFUSED_INSUFFICIENT_DATA"
                        ]
                    },
                    "transactionTimeUtc": {
                        "type": "string",
                        "description": "Transaction date and time",
                        "format": "date-time"
                    },
                    "cardPreferenceOutcome": {
                        "type": "string",
                        "description": "Outcome of the card preferences check - for possible values, please see relevant guidance on Transactions",
                        "enum": [
                            "CARD_FROZEN",
                            "CARD_NOT_PRESENT_DISABLED",
                            "CASH_WITHDRAWAL_DISABLED",
                            "CONTACTLESS_DISABLED",
                            "OVERSEAS_SPENDING_DISABLED",
                            "MAGNETIC_STRIPE_PAYMENT_DISABLED",
                            "MOBILE_WALLET_PAYMENT_DISABLED",
                            "OK",
                            "CARD_BLOCKED"
                        ]
                    },
                    "cardProcessorResponse": {
                        "type": "string",
                        "description": "Card processor response - for possible values, please see relevant guidance on Transactions",
                        "enum": [
                            "ALL_GOOD",
                            "REFER_TO_ISSUER",
                            "INVALID_MERCHANT",
                            "CAPTURE_CARD",
                            "DO_NOT_HONOR",
                            "UNSPECIFIED_ERROR",
                            "HONOR_WITH_IDENTIFICATION",
                            "PARTIAL_APPROVAL",
                            "INVALID_TRANSACTION",
                            "INVALID_AMOUNT",
                            "INVALID_CARD_NUMBER",
                            "CARD_SCHEME_NETWORK_CANNOT_CONNECT_TO_THREDD",
                            "CUSTOMER_CANCELLATION",
                            "FATAL_ERROR",
                            "PARTIAL_REVERSAL",
                            "EXPIRED_CARD_CAP",
                            "SUSPECTED_FRAUD_1",
                            "LOST_CARD_CAP",
                            "STOLEN_CARD_CAP",
                            "ACCOUNT_CLOSED",
                            "INSUFFICIENT_FUNDS",
                            "EXPIRED_CARD",
                            "INCORRECT_PIN",
                            "TRANSACTION_NOT_PERMITTED_TO_HOLDER",
                            "TRANSACTION_NOT_PERMITTED_TO_TERMINAL",
                            "SUSPECTED_FRAUD_2",
                            "EXCEEDED_WITHDRAW_AMOUNT_LIMIT",
                            "RESTRICTED_CARD",
                            "SECURITY_VIOLATION",
                            "EXCEEDED_WITHDRAWAL_FREQUENCY_LIMIT",
                            "RESPONSE_RECEIVED_TOO_LATE",
                            "HOLDER_TO_CONTACT_ISSUER",
                            "ALLOWED_PIN_RETRIES_EXCEEDED",
                            "ALLOWED_NUMBER_OF_PIN_TRIES_EXCEEDED",
                            "ISSUER_DOES_NOT_PARTICIPATE_IN_THE_SERVICE",
                            "CARD_IS_NOT_ACTIVE",
                            "UNACCEPTABLE_PIN",
                            "DOMESTIC_DEBIT_TRANSACTION_NOT_ALLOWED",
                            "TIMEOUT_AT_IEM",
                            "APPROVED_NON_FINANCIAL_OR_HOLD",
                            "PIN_VALIDATION_NOT_POSSIBLE",
                            "PURCHASE_AMOUNT_ONLY_NO_CASHBACK_ALLOWED",
                            "CRYPTOGRAPHIC_FAILURE",
                            "AUTHENTICATION_FAILURE",
                            "ISSUER_INOPERATIVE",
                            "CANT_ROUTE",
                            "VIOLATION_OF_LAW",
                            "DUPLICATE_TRANSMISSION",
                            "SYSTEM_MALFUNCTION",
                            "CVV_FAIL",
                            "FORCE_STIP",
                            "APPROVE_LOAD",
                            "VERIFICATION_DATA_FAILED",
                            "STRONG_CUSTOMER_AUTHENTICATION",
                            "SCA_REQUIRED",
                            "UNKNOWN_REASON"
                        ]
                    },
                    "merchantName": {
                        "type": "string",
                        "description": "Merchant name"
                    },
                    "isAtmTransaction": {
                        "type": "boolean",
                        "description": "Specifies whether the transaction is an ATM transaction",
                        "deprecated": true
                    },
                    "transactionType": {
                        "type": "string",
                        "description": "Transaction type:\n * **CARD_TRANSACTION**: Card transaction\n * **CARD_TRANSACTION_REFUND**: A refund of a card transaction\n * **CARD_TRANSACTION_SETTLED**: A settlement of a card transaction\n * **INTRABANK_TRANSFER_IN**: Incoming internal transfer\n * **INTRABANK_TRANSFER_OUT**: Outgoing internal transfer\n * **INTERBANK_TRANSFER_IN**: Incoming external bank transfer\n * **INTERBANK_TRANSFER_OUT**: Outgoing external bank transfer\n * **DIRECT_DEBIT_TRANSFER**: Direct Debit\n * **HAY_TOP_UP**: An account top-up\n * **INTERBANK_TRANSFER_OUT_REVERSAL**: A reversal of an outgoing external transfer\n * **REWARD**: A reward credited to the account\n * **GENERAL_CREDIT**: A general account credit\n * **GENERAL_DEBIT**: A general account debit\n * **ORIGINAL_CREDIT**: Visa Original Credit transaction\n * **BPAY_TRANSFER_OUT**: Outgoing BPAY transfer",
                        "enum": [
                            "CARD_TRANSACTION",
                            "CARD_TRANSACTION_REFUND",
                            "CARD_TRANSACTION_SETTLED",
                            "INTRABANK_TRANSFER_IN",
                            "INTRABANK_TRANSFER_OUT",
                            "INTERBANK_TRANSFER_IN",
                            "INTERBANK_TRANSFER_OUT",
                            "DIRECT_DEBIT_TRANSFER",
                            "HAY_TOP_UP",
                            "INTERBANK_TRANSFER_OUT_REVERSAL",
                            "REWARD",
                            "GENERAL_CREDIT",
                            "GENERAL_DEBIT",
                            "ORIGINAL_CREDIT",
                            "BPAY_TRANSFER_OUT"
                        ]
                    },
                    "cardUsageDetails": {
                        "$ref": "#/components/schemas/CardUsageDetails"
                    },
                    "accountBalances": {
                        "$ref": "#/components/schemas/AccountBalancesDto"
                    },
                    "cardHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Card associated with the event",
                        "format": "uuid"
                    },
                    "customerHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Customer associated with the event",
                        "format": "uuid"
                    },
                    "ruleDetails": {
                        "$ref": "#/components/schemas/RuleDetails"
                    },
                    "counterpartDetails": {
                        "$ref": "#/components/schemas/CounterpartDetails"
                    },
                    "originId": {
                        "type": "string",
                        "description": "Transaction origin ID (to be used with `originType`).",
                        "format": "uuid"
                    },
                    "originType": {
                        "type": "string",
                        "description": "Transaction origin type:\n * **CUSTOMER**: Transaction initiated by a customer\n * **SCHEDULED_PAYMENT**: Transaction initiated by a schedule\n * **HAAS_OPERATIONS**: Transaction initiated by client operations\n * **OPERATIONS**: Transaction initiated by Shaype operations\n * **MANDATE_PAYMENT**: Transaction initiated by mandate\n * **DIRECT_DEBIT**: Transaction initiated by direct debit\n * **TRANSACTION**: Transaction initiated by another transaction",
                        "enum": [
                            "CUSTOMER",
                            "SCHEDULED_PAYMENT",
                            "HAAS_OPERATIONS",
                            "OPERATIONS",
                            "MANDATE_PAYMENT",
                            "DIRECT_DEBIT",
                            "TRANSACTION"
                        ]
                    },
                    "category": {
                        "type": "string",
                        "description": "Category of the transaction."
                    },
                    "merchantId": {
                        "type": "string",
                        "description": "Merchant ID, alphanumeric / special characters maximum 15 characters in length."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description on the Transaction"
                    },
                    "mandatePaymentDetails": {
                        "$ref": "#/components/schemas/MandatePaymentDetails"
                    },
                    "returnReason": {
                        "$ref": "#/components/schemas/ReturnReason"
                    }
                },
                "description": "Details of the **Transaction** event; provided when the type is `TRANSACTION`."
            },
            "CardPinChangeEventDto": {
                "type": "object",
                "properties": {
                    "cardHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Card associated with the event",
                        "format": "uuid"
                    },
                    "cardLastFourDigits": {
                        "type": "string",
                        "description": "Last four card digits"
                    }
                },
                "description": "Details of the **Card PIN Change** event; provided when the type is `CARD_PIN_CHANGE`."
            },
            "CustomerDetails": {
                "required": [
                    "customerHayId",
                    "firstName",
                    "lastName",
                    "preferredName"
                ],
                "type": "object",
                "properties": {
                    "customerHayId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "preferredName": {
                        "type": "string"
                    }
                },
                "description": "Details of the customer - recipient of the email."
            },
            "EmailDto": {
                "required": [
                    "emailAddress",
                    "idempotencyKey",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "idempotencyKey": {
                        "type": "string",
                        "description": "Idempotency key (UUID) to uniquely represent this request and prevent duplication.",
                        "format": "uuid"
                    },
                    "emailAddress": {
                        "type": "string",
                        "description": "Email address to send the email notification to."
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the notification event - one of:\n * **CARD_ADDED_TO_WALLET**: Card has been added to a device wallet\n * **CARD_PIN_CHANGE**: Card PIN has been changed\n * **CUSTOMER_DETAILS_CHANGE**: Customer's personal details have been updated\n * **MAGIC_LINK**: Magic link email has been requested\n * **REMINDER**: A reminder",
                        "enum": [
                            "CARD_ADDED_TO_WALLET",
                            "CARD_PIN_CHANGE",
                            "CUSTOMER_DETAILS_CHANGE",
                            "MAGIC_LINK",
                            "REMINDER"
                        ]
                    },
                    "customerDetails": {
                        "$ref": "#/components/schemas/CustomerDetails"
                    },
                    "cardHayId": {
                        "type": "string",
                        "description": "Unique identifier (UUID) of the Card associated with the event",
                        "format": "uuid"
                    },
                    "cardAdditionToWalletEvent": {
                        "$ref": "#/components/schemas/CardAdditionToWalletEventDto"
                    },
                    "cardPinChangeEvent": {
                        "$ref": "#/components/schemas/CardPinChangeEventDto"
                    },
                    "customerDetailsChangeEvent": {
                        "$ref": "#/components/schemas/CustomerDetailsChangeEventDto"
                    },
                    "magicLinkEvent": {
                        "$ref": "#/components/schemas/MagicLinkEventDto"
                    },
                    "reminderType": {
                        "type": "string",
                        "description": "Type of the **Reminder** event; provided when the type is `REMINDER`. Possible values:\n * **REMINDER_TO_COMPLETE_FUNDING**\n * **REMINDER_TO_PROVISION_DIGITAL_CARD**\n * **REMINDER_TO_TRANSACT**\n * **APPLE_PAY_REMINDER_24_HRS**\n * **APPLE_PAY_REMINDER_7_DAYS**\n * **APPLE_PAY_SPEND_REMINDER_7_DAYS**\n * **APPLE_PAY_SPEND_REMINDER_14_DAYS**\n * **GOOGLE_PAY_24_HRS_PARTIAL_PROVISIONING**\n * **GOOGLE_PAY_7_DAYS_PARTIAL_PROVISIONING**\n * **GOOGLE_PAY_7_DAYS_SPEND_REMINDER**\n * **GOOGLE_PAY_14_DAYS_SPEND_REMINDER**",
                        "enum": [
                            "REMINDER_TO_COMPLETE_FUNDING",
                            "REMINDER_TO_PROVISION_DIGITAL_CARD",
                            "REMINDER_TO_TRANSACT",
                            "APPLE_PAY_REMINDER_24_HRS",
                            "APPLE_PAY_REMINDER_7_DAYS",
                            "APPLE_PAY_SPEND_REMINDER_7_DAYS",
                            "APPLE_PAY_SPEND_REMINDER_14_DAYS",
                            "APPLE_PAY_ADDITION_REWARD",
                            "APPLE_PAY_SPEND_REWARD",
                            "APPLE_PAY_ADD_TO_WALLET_REMINDER_30_DAYS",
                            "APPLE_PAY_ADD_TO_WALLET_REMINDER_60_DAYS",
                            "APPLE_PAY_ADD_TO_WALLET_REMINDER_90_DAYS",
                            "GOOGLE_PAY_24_HRS_PARTIAL_PROVISIONING",
                            "GOOGLE_PAY_7_DAYS_PARTIAL_PROVISIONING",
                            "GOOGLE_PAY_7_DAYS_SPEND_REMINDER",
                            "GOOGLE_PAY_14_DAYS_SPEND_REMINDER",
                            "CARD_EXPIRY_MONTH_REMINDER",
                            "CARD_EXPIRY_2_WEEK_REMINDER",
                            "CARD_EXPIRY_DAY_REMINDER"
                        ]
                    }
                },
                "description": "Details of the email notification"
            },
            "MagicLinkEventDto": {
                "type": "object",
                "properties": {
                    "magicLink": {
                        "type": "string",
                        "description": "Magic Link to be delivered to the customer"
                    }
                },
                "description": "Details of the **Magic Link Email Request** event; provided when the type is `MAGIC_LINK`."
            }
        }
    },
    "x-readme": {
        "proxy-enabled": true
    }
}
